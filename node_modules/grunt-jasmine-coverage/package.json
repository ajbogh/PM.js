{
  "name": "grunt-jasmine-coverage",
  "description": "Grunt task for running Jasmine specs and generate test coverage",
  "version": "0.1.0",
  "homepage": "https://github.com/mebusw/grunt-jasmine-coverage",
  "author": {
    "name": "mebusw",
    "email": "mebusw@163.com",
    "url": "http://blog.csdn.net/mebusw"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mebusw/grunt-jasmine-coverage.git"
  },
  "bugs": {
    "url": "https://github.com/mebusw/grunt-jasmine-coverage/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/mebusw/grunt-jasmine-coverage/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-jasmine-coverage": "bin/grunt-jasmine-coverage"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "grunt test jasmine"
  },
  "dependencies": {
    "grunt": "~0.3.15",
    "connect": "2.4.4",
    "temporary": "~0.0.2",
    "semver": "1.0.14",
    "eventemitter2": "0.4.9",
    "open": "0.0.2",
    "grunt-istanbul": "0.0.1"
  },
  "keywords": [
    "gruntplugin",
    "jasmine",
    "istanbul",
    "phantomjs",
    "coverage"
  ],
  "readme": "# grunt-jasmine-coverage\n\nGrunt task for running jasmine specs via phantomjs, and able to generate code coverage report.\n\n**NOTE This plugin is compatible with grunt 0.3, but not grunt 0.4 !!!**\n\n## Getting Started\n\nInstall this grunt plugin next to your project's \"grunt.js\" or \"Gruntfile\", start with: `npm install grunt-jasmine-coverage`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jasmine-coverage');\n```\n\n## Config\n- jasmine\n  - src : Your source files to test, loaded first\n  - helpers : Any helpers files to aid in testing, loaded next\n  - specs : Spec files that contain your jasmine tests\n  - amd: If true the spec files will be loaded via an AMD `require` call.\n  - timeout : The timeout where the tests are abandoned\n  - template : Path to a custom template.\n  - server :\n     - port : The port to start the server on, defaults to 8888\n  - junit :\n     - output : The output directory for junit xml\n  - phantomjs : A hash of options to pass to phantomjs eg {'ignore-ssl-errors' : true}\n  - coverage :\n     - output : The output directory for coverage report\n     - reportType : Could be `lcov` or `cobertura`. Default is `lcov`.\n     - excludes : Any files to be excluded from instrumenting.\n\n- jasmine-server\n  - browser : Open user's default browser automatically? Default true\n\n( all `jasmine` task configuration applies to `jasmine-server`, but only `coverage` will be ignored. )\n\n```javascript\n'jasmine' : {\n  src : 'src/**/*.js',\n  specs : 'specs/**/*Spec.js',\n  helpers : 'specs/helpers/*.js',\n  timeout : 10000,\n  template : 'src/custom.tmpl',\n  junit : {\n    output : 'junit/'\n  },\n  coverage : {\n    output : 'junit/coverage/',\n    reportType : 'cobertura',\n    excludes : ['lib/**/*.js']    \n  },\n  phantomjs : {\n    'ignore-ssl-errors' : true\n  }\n},\n'jasmine-server' : {\n  browser : false\n}\n```\n\n## AMD Specs\n\nIf the `amd` flag is set in the config specs will be loaded via an AMD `require` call.  This does not make an assumption about the AMD library being used, you must specify the path to that in the helpers option e.g.\n\n```javascript\nhelpers: [\n  '/path/to/require.js',\n  '/path/to/requireConfig.js'\n],\n```\n\nSpec files should define the module(s) they are testing directly as the `src` config option will be ignored in this case e.g.\n\n```javascript\ndefine(['/src/myModule.js'], function(MyModule){\n  describe('MyModule', function(){\n    // etc...\n  });\n});\n```\n\n## PhantomJS\n\nThe base jasmine task requires phantomjs to be installed and in the executable path. Download [phantomjs here](http://phantomjs.org/)\n\n## Running\n\nAfter successful configuration, you can run your tests through phantomjs with :\n\n```grunt jasmine```\n\nOr run your tests through phantomjs and generate code coverage report with :\n\n```grunt jasmine-coverage```\n\nOr open in a web browser with\n\n```grunt jasmine-server```\n\n## Example configuration\n\nHere is an [example grunt jasmine configuration](https://github.com/jsoverson/grunt-jasmine-runner-example) based off the\n Pivotal Labs example app.\n\n\n## License\nLicensed under the MIT license.\n\nPortions adapted from grunt core tasks and are copyright Ben Alman and licensed under the MIT license\n\nForked from https://github.com/creynders/grunt-jasmine-runner by Jarrod Overson. And incorprates https://github.com/taichi/grunt-istanbul\n",
  "readmeFilename": "README.md",
  "_id": "grunt-jasmine-coverage@0.1.0",
  "_from": "grunt-jasmine-coverage@"
}
